{"version":3,"file":"static/js/541.3b6ba3bc.chunk.js","mappings":"+MAEaA,EAAoBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kG,UCG7BC,EAAOJ,EAAAA,GAAOK,GAAEH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHAQhBG,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oC,mBC8BtC,EAtC8C,SAAHM,GAA+B,IAAzBC,EAAOD,EAAPC,QAASC,EAAQF,EAARE,SAElDC,GAAcC,EAAAA,EAAAA,IAAS,SAACC,GAAK,OAAKA,EAAMF,WAAW,IACnDG,GAAsBF,EAAAA,EAAAA,IAAS,SAACC,GAAK,OAAKA,EAAMC,mBAAmB,IACnEC,GAAyBH,EAAAA,EAAAA,IAC7B,SAACC,GAAK,OAAKA,EAAME,sBAAsB,IAazC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGT,EAAQU,KAAI,SAAAC,GAAmB,IAAhBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAClB,OACEN,EAAAA,EAAAA,KAACb,EAAI,CAAAe,UACHF,EAAAA,EAAAA,KAACX,EAAU,CACTkB,UAAU,OACVC,GAAE,IAAAC,OAAMJ,GACRR,MAAO,CAAEa,KAAMhB,GACfiB,cAAe,kBAnBF,SAACN,GACxB,IAAMO,EAAiBjB,EAAYkB,MAAK,SAACC,GAAM,OAAKA,EAAOT,KAAOA,CAAE,IAC9DU,EAAyBjB,EAAoBe,MACjD,SAACC,GAAM,OAAKA,EAAOT,KAAOA,CAAE,IAE1BO,IAAmBG,GACrBhB,EAAuBa,EAE3B,CAWiCI,CAAiBX,EAAG,EAACH,UAE1CF,EAAAA,EAAAA,KAAA,KAAAE,SAAII,OAPGD,EAWf,KAGN,EC5BA,EAR0C,SAAHb,GAA+B,IAAzBC,EAAOD,EAAPC,QAASC,EAAQF,EAARE,SACpD,OACEM,EAAAA,EAAAA,KAAClB,EAAiB,CAAAoB,UAChBF,EAAAA,EAAAA,KAACiB,EAAe,CAACxB,QAASA,EAASC,SAAUA,KAGnD,C,uECEA,UAR4B,WAC1B,IAAMwB,GAAqBtB,EAAAA,EAAAA,IAAS,SAACC,GAAK,OAAKA,EAAMC,mBAAmB,IAClEJ,GAAWyB,EAAAA,EAAAA,MACjB,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAW,CAAC3B,QAASyB,EAAoBxB,SAAUA,GAExD,C,wDCNME,GAAWyB,EAAAA,EAAAA,KAAAA,EACfC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAM,SAACC,GAAG,MAAM,CACd7B,YAAa,GACbG,oBAAqB,GACrB2B,WAAY,GACZC,YAAa,EACbC,WAAW,EACXC,OAAQ,GACRC,eAAgB,SAAClC,GAAW,OAAK6B,EAAI,CAAE7B,YAAAA,GAAc,EACrDmC,cAAe,SAACL,GAAU,OAAKD,EAAI,CAAEC,WAAAA,GAAa,EAClD1B,uBAAwB,SAACgC,GAAS,OAClCP,GAAI,SAAC3B,GACHA,EAAMC,oBAAoBkC,KAAKD,EACjC,GAAE,EACFE,eAAgB,SAACP,GAAmB,OAAKF,EAAI,CAAEE,YAAAA,GAAc,EAC7DQ,WAAY,SAACP,GAAkB,OAAKH,EAAI,CAAEG,UAAAA,GAAY,EACtDQ,UAAW,SAACP,GAAgB,OAAKJ,EAAI,CAAEI,OAAAA,GAAS,EACjD,MAIL,K","sources":["components/RecipesList/RecipesList.styled.tsx","components/RecipeListItem/RecipeListItem.styled.tsx","components/RecipeListItem/RecipeListItem.tsx","components/RecipesList/RecipesList.tsx","pages/FavoriteRecipes/FavoriteRecipes.tsx","store/store.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const RecipesListStyled = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 15px;\n`;\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\n\nexport const Item = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  width: 220px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n`;","import { FC } from \"react\";\nimport { LinkStyled, Item } from \"./RecipeListItem.styled\";\nimport { RecipesListProps } from \"types/types\";\nimport useStore from \"store/store\";\n\nconst RecipesListItem: FC<RecipesListProps> = ({ recipes, location }) => {\n  \n  const beerRecipes = useStore((state) => state.beerRecipes);\n  const favoriteBeerRecipes = useStore((state) => state.favoriteBeerRecipes);\n  const setFavoriteBeerRecipes = useStore(\n    (state) => state.setFavoriteBeerRecipes\n  );\n\n  const handleRightClick = (id: number) => {\n    const selectedRecipe = beerRecipes.find((recipe) => recipe.id === id);\n    const selectedFavoriteRecipe = favoriteBeerRecipes.find(\n      (recipe) => recipe.id === id\n    );\n    if (selectedRecipe && !selectedFavoriteRecipe) {\n      setFavoriteBeerRecipes(selectedRecipe);\n    }\n  };\n\n  return (\n    <>\n      {recipes.map(({ id, name }) => {\n        return (\n          <Item key={id}>\n            <LinkStyled\n              className=\"link\"\n              to={`/${id}`}\n              state={{ from: location }}\n              onContextMenu={() => handleRightClick(id)}\n            >\n              <p>{name}</p>\n            </LinkStyled>\n          </Item>\n        );\n      })}\n    </>\n  );\n};\n\nexport default RecipesListItem;\n","import { FC } from \"react\";\nimport { RecipesListStyled } from \"./RecipesList.styled\";\nimport { RecipesListProps } from \"types/types\";\nimport RecipesListItem from \"components/RecipeListItem/RecipeListItem\";\n\nconst RecipesList: FC<RecipesListProps> = ({ recipes, location }) => {\n  return (\n    <RecipesListStyled>\n      <RecipesListItem recipes={recipes} location={location}/>\n    </RecipesListStyled>\n  );\n};\n\nexport default RecipesList;\n","import { FC } from \"react\";\nimport useStore from \"store/store\";\nimport RecipesList from \"components/RecipesList/RecipesList\";\nimport { useLocation } from \"react-router-dom\";\n\nconst FavoriteRecipes: FC = () => {\n  const favoriteBeerRecipe = useStore((state) => state.favoriteBeerRecipes);\n  const location = useLocation()\n  return (\n    <RecipesList recipes={favoriteBeerRecipe} location={location}/>\n  );\n};\n\nexport default FavoriteRecipes;\n","import { create } from \"zustand\";\nimport { immer } from \"zustand/middleware/immer\";\nimport { devtools } from \"zustand/middleware\";\nimport { State, Beer } from \"types/types\";\n\nconst useStore = create<State>()(\n  devtools(\n    immer((set) => ({\n      beerRecipes: [] as Beer[],\n      favoriteBeerRecipes: [] as Beer[],\n      beerRecipe: [] as Beer[],\n      currentPage: 1,\n      isLoading: false,\n      errors: [],\n      setBeerRecipes: (beerRecipes) => set({ beerRecipes }),\n      setBeerRecipe: (beerRecipe) => set({ beerRecipe }),\n      setFavoriteBeerRecipes: (newRecipe) =>\n      set((state) => {\n        state.favoriteBeerRecipes.push(newRecipe);\n      }),\n      setCurrentPage: (currentPage: number) => set({ currentPage }),\n      setLoading: (isLoading: boolean) => set({ isLoading }),\n      setErrors: (errors: string[]) => set({ errors }),\n    }))\n  )\n);\n\nexport default useStore;\n"],"names":["RecipesListStyled","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","LinkStyled","Link","_templateObject2","_ref","recipes","location","beerRecipes","useStore","state","favoriteBeerRecipes","setFavoriteBeerRecipes","_jsx","_Fragment","children","map","_ref2","id","name","className","to","concat","from","onContextMenu","selectedRecipe","find","recipe","selectedFavoriteRecipe","handleRightClick","RecipesListItem","favoriteBeerRecipe","useLocation","RecipesList","create","devtools","immer","set","beerRecipe","currentPage","isLoading","errors","setBeerRecipes","setBeerRecipe","newRecipe","push","setCurrentPage","setLoading","setErrors"],"sourceRoot":""}